<p id="notice"><%= notice %></p>

<h1><%= @trip.name %></h1>

<div style='width: 800px;'>
  <div id="map" style='width: 800px; height: 400px;'></div>
  <div id="directionsPanel" style="float:right;width:30%;height 100%"></div>
</div>

<script type="text/javascript">
  var locations = <%= raw @trip.locations.to_json %>
  var waypoints = [];
  var origin = new google.maps.LatLng(locations[0].latitude, locations[0].longitude);
  var oneway = <%= raw @trip.oneway %>
  if (oneway) {
    var destination = new google.maps.LatLng(locations[locations.length-1].latitude, locations[locations.length-1].longitude);
    for (i=1; i<locations.length-1; i++) {
      var waypoint = new google.maps.LatLng(locations[i].latitude, locations[i].longitude);
      waypoints.push({
          location: waypoint,
          stopover: true
        });
    }
  } else {
    var destination = new google.maps.LatLng(locations[0].latitude, locations[0].longitude);
    for (i=1; i<locations.length; i++) {
      var waypoint = new google.maps.LatLng(locations[i].latitude, locations[i].longitude);
      waypoints.push({
          location: waypoint,
          stopover: true
        });
    }
  }

  var directionsDisplay = new google.maps.DirectionsRenderer();
  var directionsService = new google.maps.DirectionsService();

  function calcRoute() {

    var request = {
        origin:      origin,
        destination: destination,
        travelMode:  google.maps.TravelMode.DRIVING,
        waypoints: waypoints,
        optimizeWaypoints: true
    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
        directionsDisplay.setPanel(document.getElementById('directionsPanel'));
      }
    });
  }


calcRoute();
  handler = Gmaps.build('Google', { markers: { clusterer: undefined  } });
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(<%= raw @hash.to_json %>);
    directionsDisplay.setMap(handler.getMap());
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
</script>

<%= link_to "Add a new location", new_trip_location_path(@trip) %> |
<%= link_to 'Edit', edit_trip_path(@trip) %> |
<%= link_to 'Delete', trip_path(@trip), method: :delete, data: { confirm: 'Are you sure?' } %> |
<%= link_to 'Back', trips_path %>
